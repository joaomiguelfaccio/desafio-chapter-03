{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createMount = exports.unmount = exports.mount = void 0;\n\nvar React = __importStar(require(\"react\"));\n\nvar react_dom_1 = __importStar(require(\"react-dom\"));\n\nvar getDisplayName_1 = __importDefault(require(\"./getDisplayName\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar rootId = 'cypress-root';\n\nvar isComponentSpec = function isComponentSpec() {\n  return Cypress.spec.specType === 'component';\n};\n\nfunction checkMountModeEnabled() {\n  if (!isComponentSpec()) {\n    throw new Error(\"In order to use mount or unmount functions please place the spec in component folder\");\n  }\n}\n/**\n * Inject custom style text or CSS file or 3rd party style resources\n */\n\n\nvar injectStyles = function injectStyles(options) {\n  return function () {\n    var document = cy.state('document');\n    var el = document.getElementById(rootId);\n    return utils_1.injectStylesBeforeElement(options, document, el);\n  };\n};\n/**\n * Mount a React component in a blank document; register it as an alias\n * To access: use an alias or original component reference\n * @function   mount\n * @param      {React.ReactElement}  jsx - component to mount\n * @param      {MountOptions}  [options] - options, like alias, styles\n * @see https://github.com/bahmutov/cypress-react-unit-test\n * @see https://glebbahmutov.com/blog/my-vision-for-component-tests/\n * @example\n ```\n  import Hello from './hello.jsx'\n  import {mount} from 'cypress-react-unit-test'\n  it('works', () => {\n    mount(<Hello onClick={cy.stub()} />)\n    // use Cypress commands\n    cy.contains('Hello').click()\n  })\n ```\n **/\n\n\nvar mount = function mount(jsx, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  checkMountModeEnabled(); // Get the display name property via the component constructor\n  // @ts-ignore FIXME\n\n  var componentName = getDisplayName_1[\"default\"](jsx.type, options.alias);\n  var displayName = options.alias || componentName;\n  var message = options.alias ? \"<\" + componentName + \" ... /> as \\\"\" + options.alias + \"\\\"\" : \"<\" + componentName + \" ... />\";\n  var logInstance;\n  return cy.then(function () {\n    if (options.log !== false) {\n      logInstance = Cypress.log({\n        name: 'mount',\n        message: [message]\n      });\n    }\n  }).then(injectStyles(options)).then(function () {\n    var _a, _b, _c;\n\n    var document = cy.state('document');\n    var reactDomToUse = options.ReactDom || react_dom_1[\"default\"];\n    var el = document.getElementById(rootId);\n\n    if (!el) {\n      throw new Error(['[cypress-react-unit-test] ðŸ”¥ Hmm, cannot find root element to mount the component.', 'Did you forget to include the support file?', 'Check https://github.com/bahmutov/cypress-react-unit-test#install please'].join(' '));\n    }\n\n    var key = // @ts-ignore provide unique key to the the wrapped component to make sure we are rerendering between tests\n    (((_c = (_b = (_a = Cypress === null || Cypress === void 0 ? void 0 : Cypress.mocha) === null || _a === void 0 ? void 0 : _a.getRunner()) === null || _b === void 0 ? void 0 : _b.test) === null || _c === void 0 ? void 0 : _c.title) || '') + Math.random();\n    var props = {\n      key: key\n    };\n    var reactComponent = React.createElement(options.strict ? React.StrictMode : React.Fragment, props, jsx); // since we always surround the component with a fragment\n    // let's get back the original component\n    // @ts-ignore\n\n    var userComponent = reactComponent.props.children;\n    reactDomToUse.render(reactComponent, el);\n\n    if (logInstance) {\n      var logConsoleProps_1 = {\n        props: jsx.props,\n        description: 'Mounts React component',\n        home: 'https://github.com/bahmutov/cypress-react-unit-test'\n      };\n      var componentElement = el.children[0];\n\n      if (componentElement) {\n        // @ts-ignore\n        logConsoleProps_1.yielded = reactDomToUse.findDOMNode(componentElement);\n      }\n\n      logInstance.set('consoleProps', function () {\n        return logConsoleProps_1;\n      });\n\n      if (el.children.length) {\n        logInstance.set('$el', el.children.item(0));\n      }\n    }\n\n    return cy.wrap(userComponent, {\n      log: false\n    }).as(displayName) // by waiting, we give the component's hook a chance to run\n    // https://github.com/bahmutov/cypress-react-unit-test/issues/200\n    .wait(1, {\n      log: false\n    }).then(function () {\n      if (logInstance) {\n        logInstance.snapshot('mounted');\n        logInstance.end();\n      } // by returning undefined we keep the previous subject\n      // which is the mounted component\n\n\n      return undefined;\n    });\n  });\n};\n\nexports.mount = mount;\n/**\n * Removes the mounted component. Notice this command automatically\n * queues up the `unmount` into Cypress chain, thus you don't need `.then`\n * to call it.\n * @see https://github.com/bahmutov/cypress-react-unit-test/tree/main/cypress/component/basic/unmount\n * @example\n  ```\n  import { mount, unmount } from 'cypress-react-unit-test'\n  it('works', () => {\n    mount(...)\n    // interact with the component using Cypress commands\n    // whenever you want to unmount\n    unmount()\n  })\n  ```\n */\n\nvar unmount = function unmount() {\n  checkMountModeEnabled();\n  return cy.then(function () {\n    cy.log('unmounting...');\n    var selector = '#' + rootId;\n    return cy.get(selector, {\n      log: false\n    }).then(function ($el) {\n      react_dom_1.unmountComponentAtNode($el[0]);\n    });\n  });\n};\n\nexports.unmount = unmount;\n/**\n * Creates new instance of `mount` function with default options\n * @function   createMount\n * @param      {MountOptions}  [defaultOptions] - defaultOptions for returned `mount` function\n * @returns    new instance of `mount` with assigned options\n * @example\n * ```\n * import Hello from './hello.jsx'\n * import {Â createMount } from 'cypress-react-unit-test'\n *\n * const mount = createMount({ strict: true, cssFile: 'path/to/any/css/file.css' })\n *\n * it('works', () => {\n *   mount(<Hello />)\n *   // use Cypress commands\n *   cy.get('button').should('have.css', 'color', 'rgb(124, 12, 109)')\n * })\n ```\n **/\n\nvar createMount = function createMount(defaultOptions) {\n  return function (element, options) {\n    return exports.mount(element, __assign(__assign({}, defaultOptions), options));\n  };\n};\n\nexports.createMount = createMount;\n/** @deprecated Should be removed in the next major version */\n\nexports[\"default\"] = exports.mount;","map":{"version":3,"sources":["/Users/jmiguel/Documents/Agilizei-Bootcamp/Chapter-3/proffy-aglz/web/node_modules/cypress-react-unit-test/dist/mount.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__createBinding","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","__importDefault","exports","createMount","unmount","mount","React","require","react_dom_1","getDisplayName_1","utils_1","rootId","isComponentSpec","Cypress","spec","specType","checkMountModeEnabled","Error","injectStyles","options","document","cy","state","el","getElementById","injectStylesBeforeElement","jsx","componentName","type","alias","displayName","message","logInstance","then","log","name","_a","_b","_c","reactDomToUse","ReactDom","join","key","mocha","getRunner","test","title","Math","random","props","reactComponent","createElement","strict","StrictMode","Fragment","userComponent","children","render","logConsoleProps_1","description","home","componentElement","yielded","findDOMNode","set","item","wrap","as","wait","snapshot","end","selector","$el","unmountComponentAtNode","defaultOptions","element"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMount = exports.unmount = exports.mount = void 0;\nvar React = __importStar(require(\"react\"));\nvar react_dom_1 = __importStar(require(\"react-dom\"));\nvar getDisplayName_1 = __importDefault(require(\"./getDisplayName\"));\nvar utils_1 = require(\"./utils\");\nvar rootId = 'cypress-root';\nvar isComponentSpec = function () { return Cypress.spec.specType === 'component'; };\nfunction checkMountModeEnabled() {\n    if (!isComponentSpec()) {\n        throw new Error(\"In order to use mount or unmount functions please place the spec in component folder\");\n    }\n}\n/**\n * Inject custom style text or CSS file or 3rd party style resources\n */\nvar injectStyles = function (options) { return function () {\n    var document = cy.state('document');\n    var el = document.getElementById(rootId);\n    return utils_1.injectStylesBeforeElement(options, document, el);\n}; };\n/**\n * Mount a React component in a blank document; register it as an alias\n * To access: use an alias or original component reference\n * @function   mount\n * @param      {React.ReactElement}  jsx - component to mount\n * @param      {MountOptions}  [options] - options, like alias, styles\n * @see https://github.com/bahmutov/cypress-react-unit-test\n * @see https://glebbahmutov.com/blog/my-vision-for-component-tests/\n * @example\n ```\n  import Hello from './hello.jsx'\n  import {mount} from 'cypress-react-unit-test'\n  it('works', () => {\n    mount(<Hello onClick={cy.stub()} />)\n    // use Cypress commands\n    cy.contains('Hello').click()\n  })\n ```\n **/\nvar mount = function (jsx, options) {\n    if (options === void 0) { options = {}; }\n    checkMountModeEnabled();\n    // Get the display name property via the component constructor\n    // @ts-ignore FIXME\n    var componentName = getDisplayName_1.default(jsx.type, options.alias);\n    var displayName = options.alias || componentName;\n    var message = options.alias\n        ? \"<\" + componentName + \" ... /> as \\\"\" + options.alias + \"\\\"\"\n        : \"<\" + componentName + \" ... />\";\n    var logInstance;\n    return cy\n        .then(function () {\n        if (options.log !== false) {\n            logInstance = Cypress.log({\n                name: 'mount',\n                message: [message],\n            });\n        }\n    })\n        .then(injectStyles(options))\n        .then(function () {\n        var _a, _b, _c;\n        var document = cy.state('document');\n        var reactDomToUse = options.ReactDom || react_dom_1.default;\n        var el = document.getElementById(rootId);\n        if (!el) {\n            throw new Error([\n                '[cypress-react-unit-test] ðŸ”¥ Hmm, cannot find root element to mount the component.',\n                'Did you forget to include the support file?',\n                'Check https://github.com/bahmutov/cypress-react-unit-test#install please',\n            ].join(' '));\n        }\n        var key = \n        // @ts-ignore provide unique key to the the wrapped component to make sure we are rerendering between tests\n        (((_c = (_b = (_a = Cypress === null || Cypress === void 0 ? void 0 : Cypress.mocha) === null || _a === void 0 ? void 0 : _a.getRunner()) === null || _b === void 0 ? void 0 : _b.test) === null || _c === void 0 ? void 0 : _c.title) || '') + Math.random();\n        var props = {\n            key: key,\n        };\n        var reactComponent = React.createElement(options.strict ? React.StrictMode : React.Fragment, props, jsx);\n        // since we always surround the component with a fragment\n        // let's get back the original component\n        // @ts-ignore\n        var userComponent = reactComponent.props.children;\n        reactDomToUse.render(reactComponent, el);\n        if (logInstance) {\n            var logConsoleProps_1 = {\n                props: jsx.props,\n                description: 'Mounts React component',\n                home: 'https://github.com/bahmutov/cypress-react-unit-test',\n            };\n            var componentElement = el.children[0];\n            if (componentElement) {\n                // @ts-ignore\n                logConsoleProps_1.yielded = reactDomToUse.findDOMNode(componentElement);\n            }\n            logInstance.set('consoleProps', function () { return logConsoleProps_1; });\n            if (el.children.length) {\n                logInstance.set('$el', el.children.item(0));\n            }\n        }\n        return (cy\n            .wrap(userComponent, { log: false })\n            .as(displayName)\n            // by waiting, we give the component's hook a chance to run\n            // https://github.com/bahmutov/cypress-react-unit-test/issues/200\n            .wait(1, { log: false })\n            .then(function () {\n            if (logInstance) {\n                logInstance.snapshot('mounted');\n                logInstance.end();\n            }\n            // by returning undefined we keep the previous subject\n            // which is the mounted component\n            return undefined;\n        }));\n    });\n};\nexports.mount = mount;\n/**\n * Removes the mounted component. Notice this command automatically\n * queues up the `unmount` into Cypress chain, thus you don't need `.then`\n * to call it.\n * @see https://github.com/bahmutov/cypress-react-unit-test/tree/main/cypress/component/basic/unmount\n * @example\n  ```\n  import { mount, unmount } from 'cypress-react-unit-test'\n  it('works', () => {\n    mount(...)\n    // interact with the component using Cypress commands\n    // whenever you want to unmount\n    unmount()\n  })\n  ```\n */\nvar unmount = function () {\n    checkMountModeEnabled();\n    return cy.then(function () {\n        cy.log('unmounting...');\n        var selector = '#' + rootId;\n        return cy.get(selector, { log: false }).then(function ($el) {\n            react_dom_1.unmountComponentAtNode($el[0]);\n        });\n    });\n};\nexports.unmount = unmount;\n/**\n * Creates new instance of `mount` function with default options\n * @function   createMount\n * @param      {MountOptions}  [defaultOptions] - defaultOptions for returned `mount` function\n * @returns    new instance of `mount` with assigned options\n * @example\n * ```\n * import Hello from './hello.jsx'\n * import {Â createMount } from 'cypress-react-unit-test'\n *\n * const mount = createMount({ strict: true, cssFile: 'path/to/any/css/file.css' })\n *\n * it('works', () => {\n *   mount(<Hello />)\n *   // use Cypress commands\n *   cy.get('button').should('have.css', 'color', 'rgb(124, 12, 109)')\n * })\n ```\n **/\nvar createMount = function (defaultOptions) { return function (element, options) { return exports.mount(element, __assign(__assign({}, defaultOptions), options)); }; };\nexports.createMount = createMount;\n/** @deprecated Should be removed in the next major version */\nexports.default = exports.mount;\n"]},"metadata":{},"sourceType":"script"}