{"ast":null,"code":"\"use strict\"; // @ts-ignore\n\nvar unfetch = require('unfetch/dist/unfetch.js'); // @ts-ignore\n\n\nvar isComponentSpec = function isComponentSpec() {\n  return Cypress.spec.specType === 'component';\n}; // When running component specs, we cannot allow \"cy.visit\"\n// because it will wipe out our preparation work, and does not make much sense\n// thus we overwrite \"cy.visit\" to throw an error\n\n\nCypress.Commands.overwrite('visit', function (visit) {\n  var args = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    args[_i - 1] = arguments[_i];\n  }\n\n  if (isComponentSpec()) {\n    throw new Error('cy.visit from a component spec is not allowed\\n' + 'see https://github.com/bahmutov/cypress-react-unit-test/issues/286');\n  } else {\n    // allow regular visit to proceed\n    return visit.apply(void 0, args);\n  }\n});\n/** Initialize an empty document with root element */\n\nfunction renderTestingPlatform() {\n  // Let's mount components under a new div with this id\n  var rootId = 'cypress-root';\n  var document = cy.state('document');\n\n  if (document.getElementById(rootId)) {\n    return;\n  }\n\n  var rootNode = document.createElement('div');\n  rootNode.setAttribute('id', rootId);\n  document.getElementsByTagName('body')[0].prepend(rootNode);\n  var selector = '#' + rootId;\n  return cy.get(selector, {\n    log: false\n  });\n}\n/**\n * Replaces window.fetch with a polyfill based on XMLHttpRequest\n * that Cypress can spy on and stub\n * @see https://www.cypress.io/blog/2020/06/29/experimental-fetch-polyfill/\n */\n\n\nfunction polyfillFetchIfNeeded() {\n  // @ts-ignore\n  if (Cypress.config('experimentalFetchPolyfill')) {\n    if (!cy.state('fetchPolyfilled')) {\n      // TypeScript v4 checks if the property to be deleted is optional\n      // @ts-ignore\n      delete window.fetch;\n      window.fetch = unfetch; // @ts-ignore\n\n      cy.state('fetchPolyfilled', true);\n    }\n  }\n}\n\nbefore(function () {\n  if (!isComponentSpec()) {\n    return;\n  }\n\n  polyfillFetchIfNeeded();\n  renderTestingPlatform();\n});\n/**\n * Remove any style or extra link elements from the iframe placeholder\n * left from any previous test\n *\n */\n\nfunction cleanupStyles() {\n  if (!isComponentSpec()) {\n    return;\n  }\n\n  var document = cy.state('document');\n  var styles = document.body.querySelectorAll('style');\n  styles.forEach(function (styleElement) {\n    if (styleElement.parentElement) {\n      styleElement.parentElement.removeChild(styleElement);\n    }\n  });\n  var links = document.body.querySelectorAll('link[rel=stylesheet]');\n  links.forEach(function (link) {\n    if (link.parentElement) {\n      link.parentElement.removeChild(link);\n    }\n  });\n}\n\nbeforeEach(cleanupStyles);","map":{"version":3,"sources":["/Users/jmiguel/Documents/Agilizei-Bootcamp/Chapter-3/proffy-aglz/web/node_modules/cypress-react-unit-test/dist/hooks.js"],"names":["unfetch","require","isComponentSpec","Cypress","spec","specType","Commands","overwrite","visit","args","_i","arguments","length","Error","apply","renderTestingPlatform","rootId","document","cy","state","getElementById","rootNode","createElement","setAttribute","getElementsByTagName","prepend","selector","get","log","polyfillFetchIfNeeded","config","window","fetch","before","cleanupStyles","styles","body","querySelectorAll","forEach","styleElement","parentElement","removeChild","links","link","beforeEach"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,yBAAD,CAArB,C,CACA;;;AACA,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,GAAY;AAAE,SAAOC,OAAO,CAACC,IAAR,CAAaC,QAAb,KAA0B,WAAjC;AAA+C,CAAnF,C,CACA;AACA;AACA;;;AACAF,OAAO,CAACG,QAAR,CAAiBC,SAAjB,CAA2B,OAA3B,EAAoC,UAAUC,KAAV,EAAiB;AACjD,MAAIC,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,IAAAA,IAAI,CAACC,EAAE,GAAG,CAAN,CAAJ,GAAeC,SAAS,CAACD,EAAD,CAAxB;AACH;;AACD,MAAIR,eAAe,EAAnB,EAAuB;AACnB,UAAM,IAAIW,KAAJ,CAAU,oDACZ,oEADE,CAAN;AAEH,GAHD,MAIK;AACD;AACA,WAAOL,KAAK,CAACM,KAAN,CAAY,KAAK,CAAjB,EAAoBL,IAApB,CAAP;AACH;AACJ,CAbD;AAcA;;AACA,SAASM,qBAAT,GAAiC;AAC7B;AACA,MAAIC,MAAM,GAAG,cAAb;AACA,MAAIC,QAAQ,GAAGC,EAAE,CAACC,KAAH,CAAS,UAAT,CAAf;;AACA,MAAIF,QAAQ,CAACG,cAAT,CAAwBJ,MAAxB,CAAJ,EAAqC;AACjC;AACH;;AACD,MAAIK,QAAQ,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAf;AACAD,EAAAA,QAAQ,CAACE,YAAT,CAAsB,IAAtB,EAA4BP,MAA5B;AACAC,EAAAA,QAAQ,CAACO,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,OAAzC,CAAiDJ,QAAjD;AACA,MAAIK,QAAQ,GAAG,MAAMV,MAArB;AACA,SAAOE,EAAE,CAACS,GAAH,CAAOD,QAAP,EAAiB;AAAEE,IAAAA,GAAG,EAAE;AAAP,GAAjB,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASC,qBAAT,GAAiC;AAC7B;AACA,MAAI1B,OAAO,CAAC2B,MAAR,CAAe,2BAAf,CAAJ,EAAiD;AAC7C,QAAI,CAACZ,EAAE,CAACC,KAAH,CAAS,iBAAT,CAAL,EAAkC;AAC9B;AACA;AACA,aAAOY,MAAM,CAACC,KAAd;AACAD,MAAAA,MAAM,CAACC,KAAP,GAAehC,OAAf,CAJ8B,CAK9B;;AACAkB,MAAAA,EAAE,CAACC,KAAH,CAAS,iBAAT,EAA4B,IAA5B;AACH;AACJ;AACJ;;AACDc,MAAM,CAAC,YAAY;AACf,MAAI,CAAC/B,eAAe,EAApB,EAAwB;AACpB;AACH;;AACD2B,EAAAA,qBAAqB;AACrBd,EAAAA,qBAAqB;AACxB,CANK,CAAN;AAOA;AACA;AACA;AACA;AACA;;AACA,SAASmB,aAAT,GAAyB;AACrB,MAAI,CAAChC,eAAe,EAApB,EAAwB;AACpB;AACH;;AACD,MAAIe,QAAQ,GAAGC,EAAE,CAACC,KAAH,CAAS,UAAT,CAAf;AACA,MAAIgB,MAAM,GAAGlB,QAAQ,CAACmB,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,CAAb;AACAF,EAAAA,MAAM,CAACG,OAAP,CAAe,UAAUC,YAAV,EAAwB;AACnC,QAAIA,YAAY,CAACC,aAAjB,EAAgC;AAC5BD,MAAAA,YAAY,CAACC,aAAb,CAA2BC,WAA3B,CAAuCF,YAAvC;AACH;AACJ,GAJD;AAKA,MAAIG,KAAK,GAAGzB,QAAQ,CAACmB,IAAT,CAAcC,gBAAd,CAA+B,sBAA/B,CAAZ;AACAK,EAAAA,KAAK,CAACJ,OAAN,CAAc,UAAUK,IAAV,EAAgB;AAC1B,QAAIA,IAAI,CAACH,aAAT,EAAwB;AACpBG,MAAAA,IAAI,CAACH,aAAL,CAAmBC,WAAnB,CAA+BE,IAA/B;AACH;AACJ,GAJD;AAKH;;AACDC,UAAU,CAACV,aAAD,CAAV","sourcesContent":["\"use strict\";\n// @ts-ignore\nvar unfetch = require('unfetch/dist/unfetch.js');\n// @ts-ignore\nvar isComponentSpec = function () { return Cypress.spec.specType === 'component'; };\n// When running component specs, we cannot allow \"cy.visit\"\n// because it will wipe out our preparation work, and does not make much sense\n// thus we overwrite \"cy.visit\" to throw an error\nCypress.Commands.overwrite('visit', function (visit) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (isComponentSpec()) {\n        throw new Error('cy.visit from a component spec is not allowed\\n' +\n            'see https://github.com/bahmutov/cypress-react-unit-test/issues/286');\n    }\n    else {\n        // allow regular visit to proceed\n        return visit.apply(void 0, args);\n    }\n});\n/** Initialize an empty document with root element */\nfunction renderTestingPlatform() {\n    // Let's mount components under a new div with this id\n    var rootId = 'cypress-root';\n    var document = cy.state('document');\n    if (document.getElementById(rootId)) {\n        return;\n    }\n    var rootNode = document.createElement('div');\n    rootNode.setAttribute('id', rootId);\n    document.getElementsByTagName('body')[0].prepend(rootNode);\n    var selector = '#' + rootId;\n    return cy.get(selector, { log: false });\n}\n/**\n * Replaces window.fetch with a polyfill based on XMLHttpRequest\n * that Cypress can spy on and stub\n * @see https://www.cypress.io/blog/2020/06/29/experimental-fetch-polyfill/\n */\nfunction polyfillFetchIfNeeded() {\n    // @ts-ignore\n    if (Cypress.config('experimentalFetchPolyfill')) {\n        if (!cy.state('fetchPolyfilled')) {\n            // TypeScript v4 checks if the property to be deleted is optional\n            // @ts-ignore\n            delete window.fetch;\n            window.fetch = unfetch;\n            // @ts-ignore\n            cy.state('fetchPolyfilled', true);\n        }\n    }\n}\nbefore(function () {\n    if (!isComponentSpec()) {\n        return;\n    }\n    polyfillFetchIfNeeded();\n    renderTestingPlatform();\n});\n/**\n * Remove any style or extra link elements from the iframe placeholder\n * left from any previous test\n *\n */\nfunction cleanupStyles() {\n    if (!isComponentSpec()) {\n        return;\n    }\n    var document = cy.state('document');\n    var styles = document.body.querySelectorAll('style');\n    styles.forEach(function (styleElement) {\n        if (styleElement.parentElement) {\n            styleElement.parentElement.removeChild(styleElement);\n        }\n    });\n    var links = document.body.querySelectorAll('link[rel=stylesheet]');\n    links.forEach(function (link) {\n        if (link.parentElement) {\n            link.parentElement.removeChild(link);\n        }\n    });\n}\nbeforeEach(cleanupStyles);\n"]},"metadata":{},"sourceType":"script"}