{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mountHook = void 0;\n\nvar React = __importStar(require(\"react\"));\n\nvar mount_1 = require(\"./mount\"); // mounting hooks inside a test component mostly copied from\n// https://github.com/testing-library/react-hooks-testing-library/blob/master/src/pure.js\n\n\nfunction resultContainer() {\n  var value = null;\n  var error = null;\n  var resolvers = [];\n  var result = {\n    get current() {\n      if (error) {\n        throw error;\n      }\n\n      return value;\n    },\n\n    get error() {\n      return error;\n    }\n\n  };\n\n  var updateResult = function updateResult(val, err) {\n    if (err === void 0) {\n      err = null;\n    }\n\n    value = val;\n    error = err;\n    resolvers.splice(0, resolvers.length).forEach(function (resolve) {\n      return resolve();\n    });\n  };\n\n  return {\n    result: result,\n    addResolver: function addResolver(resolver) {\n      resolvers.push(resolver);\n    },\n    setValue: function setValue(val) {\n      return updateResult(val);\n    },\n    setError: function setError(err) {\n      return updateResult(undefined, err);\n    }\n  };\n}\n\nfunction TestHook(_a) {\n  var callback = _a.callback,\n      onError = _a.onError,\n      children = _a.children;\n\n  try {\n    children(callback());\n  } catch (err) {\n    if (err.then) {\n      throw err;\n    } else {\n      onError(err);\n    }\n  } // TODO decide what the test hook component should show\n  // maybe nothing, or maybe useful information about the hook?\n  // maybe its current properties?\n  // return <div>TestHook</div>\n\n\n  return null;\n}\n/**\n * Mounts a React hook function in a test component for testing.\n *\n * @see https://github.com/bahmutov/cypress-react-unit-test#advanced-examples\n */\n\n\nvar mountHook = function mountHook(hookFn, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = resultContainer(),\n      result = _a.result,\n      setValue = _a.setValue,\n      setError = _a.setError;\n\n  var testElement = React.createElement(TestHook, {\n    callback: hookFn,\n    onError: setError,\n    children: setValue,\n    key: Math.random().toString()\n  });\n  var mountElement = testElement;\n\n  if (options.wrapper) {\n    // what's the proper type? I don't even care anymore\n    // because types for React seem to be a mess\n    // @ts-ignore\n    mountElement = React.createElement(options.wrapper, {\n      children: [testElement]\n    });\n  }\n\n  return mount_1.mount(mountElement).then(function () {\n    cy.wrap(result);\n  });\n};\n\nexports.mountHook = mountHook;","map":{"version":3,"sources":["/Users/jmiguel/Documents/Agilizei-Bootcamp/Chapter-3/proffy-aglz/web/node_modules/cypress-react-unit-test/dist/mountHook.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","mountHook","React","require","mount_1","resultContainer","error","resolvers","current","updateResult","val","err","splice","length","forEach","resolve","addResolver","resolver","push","setValue","setError","TestHook","_a","callback","onError","children","then","hookFn","options","testElement","createElement","key","Math","random","toString","mountElement","wrapper","mount","cy","wrap"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mountHook = void 0;\nvar React = __importStar(require(\"react\"));\nvar mount_1 = require(\"./mount\");\n// mounting hooks inside a test component mostly copied from\n// https://github.com/testing-library/react-hooks-testing-library/blob/master/src/pure.js\nfunction resultContainer() {\n    var value = null;\n    var error = null;\n    var resolvers = [];\n    var result = {\n        get current() {\n            if (error) {\n                throw error;\n            }\n            return value;\n        },\n        get error() {\n            return error;\n        },\n    };\n    var updateResult = function (val, err) {\n        if (err === void 0) { err = null; }\n        value = val;\n        error = err;\n        resolvers.splice(0, resolvers.length).forEach(function (resolve) { return resolve(); });\n    };\n    return {\n        result: result,\n        addResolver: function (resolver) {\n            resolvers.push(resolver);\n        },\n        setValue: function (val) { return updateResult(val); },\n        setError: function (err) { return updateResult(undefined, err); },\n    };\n}\nfunction TestHook(_a) {\n    var callback = _a.callback, onError = _a.onError, children = _a.children;\n    try {\n        children(callback());\n    }\n    catch (err) {\n        if (err.then) {\n            throw err;\n        }\n        else {\n            onError(err);\n        }\n    }\n    // TODO decide what the test hook component should show\n    // maybe nothing, or maybe useful information about the hook?\n    // maybe its current properties?\n    // return <div>TestHook</div>\n    return null;\n}\n/**\n * Mounts a React hook function in a test component for testing.\n *\n * @see https://github.com/bahmutov/cypress-react-unit-test#advanced-examples\n */\nvar mountHook = function (hookFn, options) {\n    if (options === void 0) { options = {}; }\n    var _a = resultContainer(), result = _a.result, setValue = _a.setValue, setError = _a.setError;\n    var testElement = React.createElement(TestHook, {\n        callback: hookFn,\n        onError: setError,\n        children: setValue,\n        key: Math.random().toString(),\n    });\n    var mountElement = testElement;\n    if (options.wrapper) {\n        // what's the proper type? I don't even care anymore\n        // because types for React seem to be a mess\n        // @ts-ignore\n        mountElement = React.createElement(options.wrapper, {\n            children: [testElement],\n        });\n    }\n    return mount_1.mount(mountElement).then(function () {\n        cy.wrap(result);\n    });\n};\nexports.mountHook = mountHook;\n"]},"metadata":{},"sourceType":"script"}