{"ast":null,"code":"\"use strict\"; /// <reference path=\"./index.d.ts\" />\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar cachedDisplayNames = new WeakMap();\n/**\n * Gets the display name of the component when possible.\n * @param type {JSX} The type object returned from creating the react element.\n * @param fallbackName {string} The alias, or fallback name to use when the name cannot be derived.\n * @link https://github.com/facebook/react-devtools/blob/master/backend/getDisplayName.js\n */\n\nfunction getDisplayName(type, fallbackName) {\n  if (fallbackName === void 0) {\n    fallbackName = 'Unknown';\n  }\n\n  var nameFromCache = cachedDisplayNames.get(type);\n\n  if (nameFromCache != null) {\n    return nameFromCache;\n  }\n\n  var displayName = null; // The displayName property is not guaranteed to be a string.\n  // It's only safe to use for our purposes if it's a string.\n  // github.com/facebook/react-devtools/issues/803\n\n  if (typeof type.displayName === 'string') {\n    displayName = type.displayName;\n  }\n\n  if (!displayName) {\n    displayName = type.name || fallbackName;\n  } // Facebook-specific hack to turn \"Image [from Image.react]\" into just \"Image\".\n  // We need displayName with module name for error reports but it clutters the DevTools.\n\n\n  var match = displayName.match(/^(.*) \\[from (.*)\\]$/);\n\n  if (match) {\n    var componentName = match[1];\n    var moduleName = match[2];\n\n    if (componentName && moduleName) {\n      if (moduleName === componentName || moduleName.startsWith(componentName + '.')) {\n        displayName = componentName;\n      }\n    }\n  }\n\n  try {\n    cachedDisplayNames.set(type, displayName);\n  } catch (e) {}\n\n  return displayName;\n}\n\nexports[\"default\"] = getDisplayName;","map":{"version":3,"sources":["/Users/jmiguel/Documents/Agilizei-Bootcamp/Chapter-3/proffy-aglz/web/node_modules/cypress-react-unit-test/dist/getDisplayName.js"],"names":["Object","defineProperty","exports","value","cachedDisplayNames","WeakMap","getDisplayName","type","fallbackName","nameFromCache","get","displayName","name","match","componentName","moduleName","startsWith","set","e"],"mappings":"AAAA,a,CACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA,IAAIC,kBAAkB,GAAG,IAAIC,OAAJ,EAAzB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,YAA9B,EAA4C;AACxC,MAAIA,YAAY,KAAK,KAAK,CAA1B,EAA6B;AAAEA,IAAAA,YAAY,GAAG,SAAf;AAA2B;;AAC1D,MAAIC,aAAa,GAAGL,kBAAkB,CAACM,GAAnB,CAAuBH,IAAvB,CAApB;;AACA,MAAIE,aAAa,IAAI,IAArB,EAA2B;AACvB,WAAOA,aAAP;AACH;;AACD,MAAIE,WAAW,GAAG,IAAlB,CANwC,CAOxC;AACA;AACA;;AACA,MAAI,OAAOJ,IAAI,CAACI,WAAZ,KAA4B,QAAhC,EAA0C;AACtCA,IAAAA,WAAW,GAAGJ,IAAI,CAACI,WAAnB;AACH;;AACD,MAAI,CAACA,WAAL,EAAkB;AACdA,IAAAA,WAAW,GAAGJ,IAAI,CAACK,IAAL,IAAaJ,YAA3B;AACH,GAfuC,CAgBxC;AACA;;;AACA,MAAIK,KAAK,GAAGF,WAAW,CAACE,KAAZ,CAAkB,sBAAlB,CAAZ;;AACA,MAAIA,KAAJ,EAAW;AACP,QAAIC,aAAa,GAAGD,KAAK,CAAC,CAAD,CAAzB;AACA,QAAIE,UAAU,GAAGF,KAAK,CAAC,CAAD,CAAtB;;AACA,QAAIC,aAAa,IAAIC,UAArB,EAAiC;AAC7B,UAAIA,UAAU,KAAKD,aAAf,IACAC,UAAU,CAACC,UAAX,CAAsBF,aAAa,GAAG,GAAtC,CADJ,EACgD;AAC5CH,QAAAA,WAAW,GAAGG,aAAd;AACH;AACJ;AACJ;;AACD,MAAI;AACAV,IAAAA,kBAAkB,CAACa,GAAnB,CAAuBV,IAAvB,EAA6BI,WAA7B;AACH,GAFD,CAGA,OAAOO,CAAP,EAAU,CAAG;;AACb,SAAOP,WAAP;AACH;;AACDT,OAAO,WAAP,GAAkBI,cAAlB","sourcesContent":["\"use strict\";\n/// <reference path=\"./index.d.ts\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachedDisplayNames = new WeakMap();\n/**\n * Gets the display name of the component when possible.\n * @param type {JSX} The type object returned from creating the react element.\n * @param fallbackName {string} The alias, or fallback name to use when the name cannot be derived.\n * @link https://github.com/facebook/react-devtools/blob/master/backend/getDisplayName.js\n */\nfunction getDisplayName(type, fallbackName) {\n    if (fallbackName === void 0) { fallbackName = 'Unknown'; }\n    var nameFromCache = cachedDisplayNames.get(type);\n    if (nameFromCache != null) {\n        return nameFromCache;\n    }\n    var displayName = null;\n    // The displayName property is not guaranteed to be a string.\n    // It's only safe to use for our purposes if it's a string.\n    // github.com/facebook/react-devtools/issues/803\n    if (typeof type.displayName === 'string') {\n        displayName = type.displayName;\n    }\n    if (!displayName) {\n        displayName = type.name || fallbackName;\n    }\n    // Facebook-specific hack to turn \"Image [from Image.react]\" into just \"Image\".\n    // We need displayName with module name for error reports but it clutters the DevTools.\n    var match = displayName.match(/^(.*) \\[from (.*)\\]$/);\n    if (match) {\n        var componentName = match[1];\n        var moduleName = match[2];\n        if (componentName && moduleName) {\n            if (moduleName === componentName ||\n                moduleName.startsWith(componentName + '.')) {\n                displayName = componentName;\n            }\n        }\n    }\n    try {\n        cachedDisplayNames.set(type, displayName);\n    }\n    catch (e) { }\n    return displayName;\n}\nexports.default = getDisplayName;\n"]},"metadata":{},"sourceType":"script"}